{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./js/game.js","webpack:///./js/main.js","webpack:///./js/monster.js","webpack:///./js/mylib.js","webpack:///./js/player.js","webpack:///./js/spell.js","webpack:///./js/task.js"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,kDAA0C,gCAAgC;AAC1E;AACA;;AAEA;AACA;AACA;AACA,gEAAwD,kBAAkB;AAC1E;AACA,yDAAiD,cAAc;AAC/D;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAyC,iCAAiC;AAC1E,wHAAgH,mBAAmB,EAAE;AACrI;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;;AAGA;AACA;;;;;;;;;;;;;;;;;;AClFA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA,wDAAwD,kBAAkB;AAC1E,mDAAmD,iBAAiB;;AAEpE;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,qE;;;;;;;;;;;;;;AClDA;;AAEA;AACA;AACA,2C;;;;;;;;;;;;;;ACJA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,wE;;;;;;;;;;;;AC/CA;AAAA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,uBAAuB,yBAAyB;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,uBAAuB,kBAAkB;AACzC;AACA;AACA;AACA;AACA,uBAAuB,sBAAsB;AAC7C;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,uBAAuB,gBAAgB;AACvC,2BAA2B,oBAAoB;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,sE;;;;;;;;;;;;ACxDA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;AAGA;;AAEA,uE;;;;;;;;;;;;;;;AC1BA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,8EAA8E,wBAAwB;AACtG;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,sE;;;;;;;;;;;;;;AChDA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA,qE","file":"boundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./js/main.js\");\n","import Player from \"./player\";\nimport Monster from \"./monster\";\nimport Spell from \"./spell\";\nimport mylib from \"./mylib\";\n\nclass Game{\n    constructor(){\n        this.player;\n        this.monster;\n        this.spell;\n    }\n\n\n    create(){\n        document.querySelector('.regPage').style.display = \"none\";\n        document.querySelector('.gamePage').style.display = \"block\";\n        const playerName = document.querySelector('input').value;\n\n        this.player = new Player(playerName);\n        this.player.drawPlayer();\n\n        this.monster = new Monster(this.player.score);\n        this.monster.drawMonster(this.player);\n\n        this.spell = new Spell();\n        btnChooseSpell.addEventListener('click', () => {this.spell.open()});\n        btnAnswer.addEventListener('click', () => {this.setAnswer()});\n\n    }\n\n    setAnswer(){\n        this.spell.task.answer = answer.value;\n        answer.value = '';\n        document.querySelector('.taskPage').style.display = \"none\";\n        this.spell.cast(this.player, this.monster);\n        if(!this.monster.isAlive()){\n            this.player.score +=1;\n            this.monster = new Monster(this.player.score);\n            this.monster.drawMonster(this.player);\n        }\n        if(!this.player.isAlive()){\n            document.querySelector('.gamePage').style.display = \"none\";\n            document.querySelector('.scoresPage').style.display = \"block\";\n            localStorage.setItem('game' + Date.now(), this.player.name + ',' + this.player.score);\n            mylib.createHighscoresTable();\n        }\n\n    }\n}\n\nexport default Game;","import Game from \"./game.js\";\n\nconst game = new Game();\nconst myGame = game.create.bind(game);\nbtnStart.addEventListener('click', myGame);","import mylib from \"./mylib\";\n\nclass Monster{\n    constructor(score){\n        this.score = score;\n        this.name = Monster.generateName();\n        this.startHealth = Monster.generateHealth(this.score);\n        this.health = this.startHealth;\n    }\n\n    drawMonster(){\n        document.querySelector('.monsterImage').style.display = 'block';\n        document.querySelector('.monsterName').innerHTML = this.name;\n        this.setHealth();\n\n        const backgroundImages = ['arena1', 'arena2', 'arena3', 'arena4'];\n        document.querySelector('.gamePage').classList.remove(backgroundImages[this.score%4-1]);\n        document.querySelector('.gamePage').classList.remove(backgroundImages[this.score%4+3]);\n        document.querySelector('.gamePage').classList.add(backgroundImages[this.score%4]);\n    }\n\n    setHealth(){\n        document.querySelector('.monsterHealthRemain').style.width = this.health/this.startHealth*100 + \"%\";\n        document.querySelector('.monsterHealthRemain').innerHTML = this.health;\n    }\n\n    isAlive(){\n        return this.health > 0;\n    }\n\n\n\n    static generateName(){\n        const firstNames = [\"Kazimir\", \"Voiclah\", \"Magamed\", \"Ludovik\", \"Genrich\", \"Sigizmund\", \"Aslanbek\", \"Bzdashek\"];\n        const secondNames = [\"\\\"Hriply\\\"\", \"\\\"Shavka\\\"\", \"\\\"Bambula\\\"\", \"\\\"Baklan\\\"\", \"\\\"Brodyaga\\\"\", \"\\\"Vertuhai\\\"\"];\n        const thirdNames = [\"Vonuchkin\", \"Svininsky\", \"Zhirnidze\", \"Kakulka\", \"Soplivyan\", \"Gryaznulenko\", \"Potnyakovich\"];\n        const chosenFirstName = mylib.getRandomArrayElement(firstNames);\n        const chosenSecondName = mylib.getRandomArrayElement(secondNames);\n        const chosenThirdName = mylib.getRandomArrayElement(thirdNames);\n        return chosenFirstName + ' ' + chosenSecondName + ' ' + chosenThirdName;\n    }\n\n    static generateHealth(score){\n        return (30 + score*10 + mylib.getRandomFromTo(0, 10));\n    }\n}\n\nexport default Monster;","class mylib{\n    constructor(){}\n\n    static getRandomArrayElement(array){\n        return array[Math.floor(Math.random() * array.length)];\n    }\n\n    static getRandomFromTo(min, max){\n        return Math.floor(Math.random() * (max - min + 1)) + min;;\n    }\n\n    static createHighscoresTable() {\n        let recordsArray = mylib.getHighscores();\n        let recordsTable = document.querySelector('table');\n        for (let i = 0; i < recordsArray.length; i++) {\n            let tableRow = document.createElement(\"tr\");\n            let playerName = document.createElement(\"td\");\n            let playerScore = document.createElement(\"td\");\n            playerName.innerText = recordsArray[i][0];\n            playerScore.innerText = recordsArray[i][1];\n            tableRow.appendChild(playerName);\n            tableRow.appendChild(playerScore);\n            recordsTable.appendChild(tableRow);\n        }\n    }\n\n    static getHighscores() {\n        let allScores = [];\n        let storageCount = localStorage.length;\n        for (let i = 0; i < storageCount; i++) {\n            if (localStorage.key(i).substr(0, 4) === 'game') {\n                allScores.push(localStorage.getItem(localStorage.key(i)).split(','));\n            }\n        }\n        for (let i = 0; i < allScores.length; i++) {\n            allScores[i][1] = Number(allScores[i][1]);\n        }\n        allScores = mylib.bubbleSort2D(allScores).slice(0, 10);\n        return allScores;\n    }\n\n    static bubbleSort2D(array) {\n        let length = array.length;\n        for (let i = 0; i < length - 1; i++) {\n            for (let j = 0; j < length - 1 - i; j++) {\n                if (array[j + 1][1] > array[j][1]) {\n                    let t = array[j + 1];\n                    array[j + 1] = array[j];\n                    array[j] = t;\n                }\n            }\n        }\n        return array;\n    }\n}\n\nexport default mylib;","class Player{\n    constructor(name){\n        this.name = name;\n        this.startHealth = 100;\n        this.health = this.startHealth;\n        this.score = 0;\n    }\n\n    drawPlayer(){\n        document.querySelector('.playerImage').style.display = 'block';\n        document.querySelector('.playerName').innerHTML = this.name;\n        this.setHealth();\n    }\n\n    setHealth(){\n        document.querySelector('.playerHealthRemain').style.width = this.health/this.startHealth*100 + \"%\";\n        document.querySelector('.playerHealthRemain').innerHTML = this.health;\n    }\n\n    isAlive(){\n        return this.health > 0;\n    }\n\n\n}\n\nexport default Player;","import Task from \"./task\";\nimport mylib from \"./mylib\";\n\nclass Spell{\n    constructor(){\n        this.kind;\n        this.task;\n    }\n\n    open(){\n        document.querySelector('.spellPage').style.display = \"block\";\n        document.querySelector('.spellPage').addEventListener('click', () => {this.chooseSpell(event)});\n    }\n\n    chooseSpell(event){\n        this.kind = event.target.getAttribute('id');\n        document.querySelector('.spellPage').style.display = \"none\";\n        document.querySelector('.taskPage').style.display = \"block\";\n        this.task = new Task();\n        this.task.generate();\n\n    }\n\n    atack(obj){\n        obj.health -= mylib.getRandomFromTo(20, 25+obj.score*5);\n        obj.setHealth();\n    }\n\n    heal(obj){\n        obj.health = Math.min(obj.health+mylib.getRandomFromTo(20, 25+obj.score*5), obj.startHealth);\n        obj.setHealth();\n    }\n\n    cast(player, monster){\n        switch (this.kind){\n            case 'swordSpell':\n                this.task.isSolved() ? this.atack(monster) : this.atack(player);\n                break;\n            case 'medicineSpell':\n                this.task.isSolved() ? this.heal(player) : this.atack(player);\n                break;\n            default:\n                null;\n        }\n\n    }\n}\n\nexport default Spell;","import mylib from \"./mylib\";\n\nclass Task{\n    constructor(){\n        this.condition;\n        this.solution;\n        this.answer;\n    }\n\n    generate(){\n        const firstNumber = mylib.getRandomFromTo(0, 100);\n        const secondNumber = mylib.getRandomFromTo(0, 100);\n        const operations = ['+', '-', '*', '/'];\n        const operation = mylib.getRandomArrayElement(operations);\n        this.condition = firstNumber + operation + secondNumber;\n        this.solution = eval(this.condition);\n        document.querySelector('.taskCondition').innerHTML = this.condition;\n    }\n\n    isSolved(){\n        return this.solution == this.answer;\n    }\n\n}\n\nexport default Task;"],"sourceRoot":""}